---
alwaysApply: true
---

# NestJS Backend Architecture Guide

This is a NestJS backend application for a home tour platform with TypeORM database integration.

## Project Structure

- **Entry Point**: [main.ts](mdc:src/main.ts) - Application bootstrap
- **App Module**: [app.module.ts](mdc:src/app.module.ts) - Root module configuration
- **Database Config**: [typeorm.config.ts](mdc:typeorm.config.ts) and [database.config.ts](mdc:src/config/database.config.ts)

## Core Architecture Patterns

### Base Classes

- **Base Entity**: [base.entity.ts](mdc:src/common/base/Entity/base.entity.ts) - All entities extend this
- **Base Service**: [base.service.ts](mdc:src/common/base/crud/base.service.ts) - Generic CRUD operations
- **Base Controller**: [base.controller.ts](mdc:src/common/base/crud/base.controller.ts) - Standard REST endpoints
- **Base Repository**: [base.repository.ts](mdc:src/common/base/repositories/base.repository.ts) - Database operations

### Module Structure

Each feature module follows this pattern:

```
modules/[feature]/
├── dto/                    # Data Transfer Objects
├── entities/              # TypeORM entities
├── repositories/          # Custom repository classes
├── [feature].controller.ts # REST API endpoints
├── [feature].service.ts   # Business logic
└── [feature].module.ts    # Module configuration
```

## Key Modules

- **Auth**: [auth.module.ts](mdc:src/modules/auth/auth.module.ts) - JWT authentication with OTP
- **Property**: [property.module.ts](mdc:src/modules/property/property.module.ts) - Property management with rooms and services
- **Location**: [location.module.ts](mdc:src/modules/location/location.module.ts) - Vietnamese administrative divisions
- **Services**: [services.module.ts](mdc:src/modules/services/services.module.ts) - Property services management
- **Users**: [users.module.ts](mdc:src/modules/users/users.module.ts) - User management

## Common Utilities

- **Enums**: [property.enum.ts](mdc:src/common/enums/property.enum.ts), [room.enum.ts](mdc:src/common/enums/room.enum.ts)
- **Decorators**: [allow-anonymous.decorator.ts](mdc:src/common/decorators/allow-anonymous.decorator.ts)
- **Interceptors**: [transform.interceptor.ts](mdc:src/common/interceptors/transform.interceptor.ts)
- **Utils**: [src/common/utils/](mdc:src/common/utils/) - Date, string, object utilities
