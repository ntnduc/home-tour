{
	"info": {
		"_postman_id": "home-tour-api-v2",
		"name": "Home Tour API v2",
		"description": "Complete API collection for Home Tour backend v2 - Property Management System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "home-tour-api"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Request OTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"phoneNumber\": \"0123456789\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/request-otp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"request-otp"
							]
						},
						"description": "Request OTP for phone number verification"
					}
				},
				{
					"name": "Verify OTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"phoneNumber\": \"0123456789\",\n  \"otp\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/verify-otp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"verify-otp"
							]
						},
						"description": "Verify OTP and get temporary token"
					}
				},
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{tempToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register new user with verified phone number"
					}
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh-token"
							]
						},
						"description": "Refresh access token using refresh token"
					}
				},
				{
					"name": "Check Login Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/check-login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"check-login"
							]
						},
						"description": "Check if user is logged in"
					}
				},
				{
					"name": "Logout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout user and invalidate token"
					}
				}
			],
			"description": "Authentication endpoints for OTP-based login system"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"phone\": \"0123456789\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Create a new user"
					}
				},
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Get all users"
					}
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Get user by ID"
					}
				},
				{
					"name": "Update User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe Updated\",\n  \"email\": \"john.updated@example.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Update user information"
					}
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Delete user"
					}
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Property",
			"item": [
				{
					"name": "Create Property",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Property Name\",\n  \"address\": \"123 Main St\",\n  \"description\": \"Property description\",\n  \"type\": \"APARTMENT\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/property",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"property"
							]
						},
						"description": "Create a new property (Admin/Owner only)"
					}
				},
				{
					"name": "Get All Properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/property",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"property"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						},
						"description": "Get all properties with pagination"
					}
				},
				{
					"name": "Get Property by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/property/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"property",
								"{{propertyId}}"
							]
						},
						"description": "Get property details by ID"
					}
				},
				{
					"name": "Update Property",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"{{propertyId}}\",\n  \"name\": \"Updated Property Name\",\n  \"address\": \"456 Updated St\",\n  \"description\": \"Updated description\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/property",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"property"
							]
						},
						"description": "Update property (Admin/Owner/Manager only)"
					}
				},
				{
					"name": "Delete Property",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/property/{{propertyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"property",
								"{{propertyId}}"
							]
						},
						"description": "Delete property (Admin/Owner only)"
					}
				},
				{
					"name": "Get Property Combo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/property/combo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"property",
								"combo"
							]
						},
						"description": "Get property combo list for dropdowns"
					}
				},
				{
					"name": "Test Property Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/property/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"property",
								"test"
							]
						},
						"description": "Test endpoint without guards"
					}
				}
			],
			"description": "Property management endpoints with RBAC"
		},
		{
			"name": "Rooms",
			"item": [
				{
					"name": "Create Room",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Room 101\",\n  \"propertyId\": \"{{propertyId}}\",\n  \"type\": \"SINGLE\",\n  \"price\": 500000,\n  \"area\": 25,\n  \"status\": \"AVAILABLE\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/rooms",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"rooms"
							]
						},
						"description": "Create a new room"
					}
				},
				{
					"name": "Get All Rooms",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/rooms",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"rooms"
							],
							"query": [
								{
									"key": "propertyId",
									"value": "{{propertyId}}",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						},
						"description": "Get all rooms with filtering"
					}
				},
				{
					"name": "Get Room by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/rooms/{{roomId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"rooms",
								"{{roomId}}"
							]
						},
						"description": "Get room details by ID"
					}
				},
				{
					"name": "Update Room",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"{{roomId}}\",\n  \"name\": \"Updated Room 101\",\n  \"price\": 550000,\n  \"status\": \"OCCUPIED\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/rooms",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"rooms"
							]
						},
						"description": "Update room information"
					}
				},
				{
					"name": "Delete Room",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/rooms/{{roomId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"rooms",
								"{{roomId}}"
							]
						},
						"description": "Delete room"
					}
				}
			],
			"description": "Room management endpoints with property access control"
		},
		{
			"name": "Location",
			"item": [
				{
					"name": "Get Provinces",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/location/provinces",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"location",
								"provinces"
							]
						},
						"description": "Get all provinces for combo box"
					}
				},
				{
					"name": "Get Districts by Province",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/location/districts/{{provinceCode}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"location",
								"districts",
								"{{provinceCode}}"
							]
						},
						"description": "Get districts by province code"
					}
				},
				{
					"name": "Get Wards by District",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/location/wards/{{districtCode}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"location",
								"wards",
								"{{districtCode}}"
							]
						},
						"description": "Get wards by district code"
					}
				}
			],
			"description": "Location data endpoints for address selection"
		},
		{
			"name": "RBAC Management",
			"item": [
				{
					"name": "Roles",
					"item": [
						{
							"name": "Create Role",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roleName\": \"CUSTOM_ROLE\",\n  \"description\": \"Custom role description\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/rbac/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"roles"
									]
								},
								"description": "Create a new role (Admin only)"
							}
						},
						{
							"name": "Get All Roles",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/rbac/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"roles"
									]
								},
								"description": "Get all roles"
							}
						},
						{
							"name": "Get Role by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/rbac/roles/{{roleId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"roles",
										"{{roleId}}"
									]
								},
								"description": "Get role details with permissions"
							}
						}
					]
				},
				{
					"name": "Permissions",
					"item": [
						{
							"name": "Create Permission",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"permissionName\": \"CUSTOM_PERMISSION\",\n  \"description\": \"Custom permission description\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/rbac/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"permissions"
									]
								},
								"description": "Create a new permission (Admin only)"
							}
						},
						{
							"name": "Get All Permissions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/rbac/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"permissions"
									]
								},
								"description": "Get all permissions"
							}
						}
					]
				},
				{
					"name": "Role-Permission Assignment",
					"item": [
						{
							"name": "Assign Permission to Role",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"roleId\": \"{{roleId}}\",\n  \"permissionId\": \"{{permissionId}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/rbac/roles/assign-permission",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"roles",
										"assign-permission"
									]
								},
								"description": "Assign permission to role (Admin only)"
							}
						},
						{
							"name": "Remove Permission from Role",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/rbac/roles/{{roleId}}/permissions/{{permissionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"roles",
										"{{roleId}}",
										"permissions",
										"{{permissionId}}"
									]
								},
								"description": "Remove permission from role (Admin only)"
							}
						}
					]
				},
				{
					"name": "User-Role Assignment",
					"item": [
						{
							"name": "Assign Role to User",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": \"{{userId}}\",\n  \"roleId\": \"{{roleId}}\",\n  \"propertyId\": \"{{propertyId}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/rbac/users/assign-role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"users",
										"assign-role"
									]
								},
								"description": "Assign role to user for specific property"
							}
						},
						{
							"name": "Remove Role from User",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/rbac/users/{{userId}}/roles/{{roleId}}/properties/{{propertyId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"users",
										"{{userId}}",
										"roles",
										"{{roleId}}",
										"properties",
										"{{propertyId}}"
									]
								},
								"description": "Remove role from user for specific property"
							}
						},
						{
							"name": "Get User Roles",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/rbac/users/{{userId}}/roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"users",
										"{{userId}}",
										"roles"
									]
								},
								"description": "Get all roles for a user"
							}
						},
						{
							"name": "Get User Permissions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/rbac/users/{{userId}}/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"users",
										"{{userId}}",
										"permissions"
									],
									"query": [
										{
											"key": "propertyId",
											"value": "{{propertyId}}",
											"disabled": true
										}
									]
								},
								"description": "Get all permissions for a user (optionally for specific property)"
							}
						},
						{
							"name": "Check Property Access",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/rbac/users/{{userId}}/properties/{{propertyId}}/access",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"users",
										"{{userId}}",
										"properties",
										"{{propertyId}}",
										"access"
									]
								},
								"description": "Check if user has access to specific property"
							}
						}
					]
				},
				{
					"name": "System",
					"item": [
						{
							"name": "Initialize System",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{accessToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/rbac/initialize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"rbac",
										"initialize"
									]
								},
								"description": "Initialize default roles and permissions (Admin only)"
							}
						}
					]
				}
			],
			"description": "Role-Based Access Control management endpoints"
		},
		{
			"name": "Services",
			"item": [
				{
					"name": "Create Service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Internet\",\n  \"description\": \"High-speed internet service\",\n  \"price\": 100000,\n  \"isDefault\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"services"
							]
						},
						"description": "Create a new service"
					}
				},
				{
					"name": "Get All Services",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"services"
							]
						},
						"description": "Get all services"
					}
				},
				{
					"name": "Get Service by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/services/{{serviceId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"services",
								"{{serviceId}}"
							]
						},
						"description": "Get service by ID"
					}
				},
				{
					"name": "Update Service",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"{{serviceId}}\",\n  \"name\": \"Updated Internet\",\n  \"price\": 120000\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/services",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"services"
							]
						},
						"description": "Update service"
					}
				},
				{
					"name": "Delete Service",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/services/{{serviceId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"services",
								"{{serviceId}}"
							]
						},
						"description": "Delete service"
					}
				},
				{
					"name": "Get Default Selected Services",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/services/default-selected",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"services",
								"default-selected"
							]
						},
						"description": "Get services that are selected by default"
					}
				}
			],
			"description": "Service management endpoints"
		},
		{
			"name": "Test & Debug",
			"item": [
				{
					"name": "Create Test Entity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Test Entity\",\n  \"description\": \"Test description\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"test"
							]
						},
						"description": "Create test entity"
					}
				},
				{
					"name": "Get All Test Entities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"test"
							]
						},
						"description": "Get all test entities"
					}
				},
				{
					"name": "Create Test Mapping",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"testId\": \"{{testId}}\",\n  \"mappingData\": \"test mapping\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/test/create-mapping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"test",
								"create-mapping"
							]
						},
						"description": "Create test mapping"
					}
				},
				{
					"name": "Public Test Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/test/public",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"test",
								"public"
							]
						},
						"description": "Public test endpoint (no auth required)"
					}
				},
				{
					"name": "Auth Only Test",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/test/auth-only",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"test",
								"auth-only"
							]
						},
						"description": "Test endpoint requiring authentication only"
					}
				},
				{
					"name": "Roles Test",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/test/roles-test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"test",
								"roles-test"
							]
						},
						"description": "Test endpoint for roles (Admin/Owner only)"
					}
				},
				{
					"name": "Permissions Test",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/test/permissions-test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"test",
								"permissions-test"
							]
						},
						"description": "Test endpoint for permissions (VIEW_PROPERTY required)"
					}
				}
			],
			"description": "Test and debugging endpoints for development"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "tempToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "propertyId",
			"value": "",
			"type": "string"
		},
		{
			"key": "roomId",
			"value": "",
			"type": "string"
		},
		{
			"key": "roleId",
			"value": "",
			"type": "string"
		},
		{
			"key": "permissionId",
			"value": "",
			"type": "string"
		},
		{
			"key": "serviceId",
			"value": "",
			"type": "string"
		},
		{
			"key": "testId",
			"value": "",
			"type": "string"
		},
		{
			"key": "provinceCode",
			"value": "01",
			"type": "string"
		},
		{
			"key": "districtCode",
			"value": "001",
			"type": "string"
		}
	]
}
