//================================================================
// DBML for Room Rental Management System
// Generated on: 2025-06-06
// Version: 2.0
//================================================================

Project "Hệ Thống Quản Lý Phòng Trọ" {
  database_type: 'PostgreSQL'
  Note: 'Thiết kế chi tiết cho hệ thống quản lý nhà trọ, phòng trọ, người thuê và các nghiệp vụ liên quan.'
}

//----------------------------------------------------------------
// Bảng Enum (Các loại dữ liệu định sẵn)
//----------------------------------------------------------------

Enum ServiceCalculationMethod {
  FIXED_PER_ROOM
  FIXED_PER_PERSON
  PER_UNIT_SIMPLE
  PER_UNIT_TIERED
  FREE
}

Enum RoomStatus {
  AVAILABLE
  OCCUPIED
  MAINTENANCE
  PENDING_DEPOSIT
  UNAVAILABLE
}

Enum LeaseStatus {
  ACTIVE
  ENDED
  TERMINATED_EARLY
  PENDING_START
  EXPIRED
}

Enum InvoiceStatus {
  DRAFT
  SENT
  PAID
  PARTIALLY_PAID
  OVERDUE
  CANCELLED
  VOID
}

Enum InvoiceItemType {
  RENT
  SERVICE
  OTHER_FEE
  DISCOUNT_ITEM
  LATE_FEE_ITEM
  PREVIOUS_BALANCE_ITEM
}

Enum PaymentMethod {
  CASH
  BANK_TRANSFER
  E_WALLET
  CARD
  OTHER
}

Enum MaintenancePriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

Enum MaintenanceStatus {
  PENDING_APPROVAL
  APPROVED
  IN_PROGRESS
  COMPLETED
  CANCELLED
  REJECTED
  ON_HOLD
}

Enum NotificationType {
    PAYMENT_REMINDER
    NEW_INVOICE
    INVOICE_PAID
    MAINTENANCE_UPDATE
    GENERAL_ANNOUNCEMENT
    LEASE_ENDING_SOON
    NEW_MESSAGE
}

//----------------------------------------------------------------
// Bảng chính
//----------------------------------------------------------------

Table Users {
  UserID int [pk, increment, note: 'ID duy nhất của người dùng']
  FullName varchar(255) [not null, note: 'Họ và tên']
  PhoneNumber varchar(20) [unique, not null, note: 'Số điện thoại']
  Email varchar(255) [unique, note: 'Email']
  PasswordHash varchar(255) [not null, note: 'Mật khẩu đã được mã hóa']
  IDCardNumber varchar(50) [note: 'Số CMND/CCCD']
  PermanentAddress text [note: 'Địa chỉ thường trú']
  DateOfBirth date [note: 'Ngày sinh']
  ProfilePictureURL varchar(255) [note: 'URL ảnh đại diện']
  RegistrationDate datetime [default: `now()`, note: 'Ngày đăng ký']
  LastLoginDate datetime [note: 'Lần đăng nhập cuối']
  IsActive boolean [default: true, note: 'Tài khoản có hoạt động không']
  Notes text [note: 'Ghi chú thêm về người dùng']
}

Table Properties {
  PropertyID int [pk, increment, note: 'ID duy nhất của nhà trọ']
  OwnerUserID int [not null, note: 'Chủ sở hữu nhà trọ']
  PropertyName varchar(255) [not null, note: 'Tên gợi nhớ nhà trọ']
  Address text [not null, note: 'Địa chỉ chi tiết (Số nhà, đường)']
  Ward varchar(100)
  District varchar(100) [not null]
  City varchar(100) [not null]
  Country varchar(100) [default: 'Việt Nam']
  Latitude decimal(10, 8)
  Longitude decimal(11, 8)
  Description text
  DefaultRoomRent decimal(12, 2) [note: 'Tiền thuê phòng mặc định của nhà trọ']
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime
}

Table PropertyImages {
  PropertyImageID int [pk, increment]
  PropertyID int [not null]
  ImageURL varchar(255) [not null]
  Caption varchar(255)
  IsCoverImage boolean [default: false]
  UploadedAt datetime [default: `now()`]
}

Table Services {
  ServiceID int [pk, increment]
  ServiceName varchar(100) [unique, not null]
  Description text
  CalculationMethod ServiceCalculationMethod [not null]
  DefaultUnitName varchar(50) [note: 'Đơn vị tính mặc định (kWh, m3, tháng, người)']
}

Table PropertyServices {
  PropertyServiceID int [pk, increment]
  PropertyID int [not null]
  ServiceID int [not null]
  DefaultPrice decimal(10, 2) [note: 'Giá mặc định cho dịch vụ']
  IsMandatory boolean [default: false]
  Notes text

  Indexes {
    (PropertyID, ServiceID) [unique]
  }
}

Table TieredPricing {
  TieredPriceID int [pk, increment]
  PropertyServiceID int [not null, note: 'Liên kết với dịch vụ cụ thể của nhà trọ']
  MinUsage decimal(10, 2) [not null, note: 'Mức sử dụng tối thiểu của bậc']
  MaxUsage decimal(10, 2) [note: 'Mức sử dụng tối đa của bậc (NULL cho bậc cao nhất)']
  PricePerUnit decimal(10, 2) [not null, note: 'Giá mỗi đơn vị trong bậc này']
  TierOrder int [not null, note: 'Thứ tự các bậc giá']

  Indexes {
    (PropertyServiceID, TierOrder) [unique]
  }
}

Table Rooms {
  RoomID int [pk, increment]
  PropertyID int [not null]
  RoomNumber varchar(50) [not null]
  Description text
  Area decimal(8, 2) [note: 'Diện tích phòng (m2)']
  RentAmount decimal(12, 2) [not null, note: 'Giá thuê phòng cơ bản']
  MaxOccupancy int [default: 1, note: 'Số người ở tối đa']
  Status RoomStatus [not null, default: 'AVAILABLE']
  Floor varchar(20)
  RoomType varchar(100)
  DefaultDepositAmount decimal(12, 2) [note: 'Tiền cọc mặc định']
  DefaultPaymentDueDay int [default: 1, note: 'Ngày hạn thanh toán mặc định']
  Notes text
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime

  Indexes {
    (PropertyID, RoomNumber) [unique]
  }
}

Table RoomImages {
  RoomImageID int [pk, increment]
  RoomID int [not null]
  ImageURL varchar(255) [not null]
  Caption varchar(255)
  IsCoverImage boolean [default: false]
  UploadedAt datetime [default: `now()`]
}

Table RoomServices {
  RoomServiceID int [pk, increment]
  RoomID int [not null]
  ServiceID int [not null]
  CustomPrice decimal(10, 2) [note: 'Giá tùy chỉnh cho phòng này, nếu NULL thì dùng giá mặc định']
  IsEnabled boolean [default: true]
  Notes text

  Indexes {
    (RoomID, ServiceID) [unique]
  }
}

Table Leases {
  LeaseID int [pk, increment]
  RoomID int [not null]
  PrimaryTenantUserID int [not null, note: 'Người thuê đứng tên chính']
  LandlordUserID int [not null, note: 'Chủ nhà/Người đại diện ký hợp đồng']
  StartDate date [not null]
  EndDate date
  RentAmountAgreed decimal(12, 2) [not null]
  DepositAmountPaid decimal(12, 2) [default: 0]
  PaymentDueDay int [not null]
  ContractScanURL varchar(255)
  Status LeaseStatus [not null, default: 'PENDING_START']
  Notes text
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime
}

Table LeaseTenants {
  LeaseTenantID int [pk, increment]
  LeaseID int [not null]
  TenantUserID int [not null]
  RelationshipToPrimary varchar(100)
  MoveInDate date [not null]
  MoveOutDate date
  IsActiveInLease boolean [default: true]

  Indexes {
    (LeaseID, TenantUserID) [unique]
  }
}

Table UtilityReadings {
  ReadingID int [pk, increment]
  RoomID int [not null]
  ServiceID int [not null]
  ReadingDate date [not null]
  ReadingValue decimal(10, 2) [not null, note: 'Chỉ số mới']
  PreviousReadingID int [note: 'Tham chiếu đến lần ghi trước']
  PreviousReadingValue decimal(10, 2) [note: 'Chỉ số cũ']
  UsageAmount decimal(10, 2) [note: 'Lượng sử dụng (tính toán tự động)']
  UnitName varchar(50)
  RecordedByUserID int
  ReadingImageURL varchar(255)
  Notes text
  InvoiceID int [note: 'Liên kết với hóa đơn đã xuất']

  Indexes {
    (RoomID, ServiceID, ReadingDate) [unique]
  }
}

Table Invoices {
  InvoiceID int [pk, increment]
  LeaseID int [not null]
  RoomID int [not null, note: 'Để tiện truy vấn']
  InvoiceNumber varchar(50) [unique]
  InvoiceDate date [not null]
  BillingPeriodStart date [not null]
  BillingPeriodEnd date [not null]
  DueDate date [not null]
  TotalRentAmount decimal(12, 2) [default: 0]
  TotalServiceAmount decimal(12, 2) [default: 0]
  DiscountAmount decimal(12, 2) [default: 0]
  LateFeeAmount decimal(12, 2) [default: 0]
  PreviousBalance decimal(12, 2) [default: 0]
  TotalAmountDue decimal(14, 2) [not null]
  AmountPaid decimal(14, 2) [default: 0]
  BalanceRemaining decimal(14, 2) [note: 'Tính toán tự động']
  Status InvoiceStatus [not null, default: 'DRAFT']
  Notes text
  GeneratedByUserID int
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime
}

Table InvoiceItems {
  InvoiceItemID int [pk, increment]
  InvoiceID int [not null]
  Description varchar(255) [not null]
  ItemType InvoiceItemType [not null]
  ServiceID int
  ReadingID int
  Quantity decimal(10, 2)
  UnitPrice decimal(10, 2)
  SubtotalAmount decimal(12, 2) [not null]
  Notes text
}

Table Payments {
  PaymentID int [pk, increment]
  InvoiceID int [note: 'Có thể NULL nếu thanh toán cọc không qua hóa đơn']
  LeaseID int [not null]
  PayerUserID int
  PaymentDate datetime [not null]
  Amount decimal(14, 2) [not null]
  PaymentMethod PaymentMethod
  TransactionReference varchar(255)
  PaymentFor varchar(50) [not null, default: 'RENT_AND_SERVICES']
  Notes text
  ReceivedByUserID int
  CreatedAt datetime [default: `now()`]
}

Table TenantMoveHistory {
  TenantMoveHistoryID int [pk, increment]
  LeaseTenantID int [not null]
  RoomID int [not null]
  TenantUserID int [not null]
  ActionType varchar(50) [not null, note: 'MOVED_IN, MOVED_OUT, ...']
  ActionDate date [not null]
  Notes text
  RecordedByUserID int
}

Table ServiceChangeHistory {
  ServiceChangeID int [pk, increment]
  RoomServiceID int
  PropertyServiceID int
  TieredPriceID int
  ChangedByUserID int [not null]
  ChangeDate datetime [default: `now()`]
  FieldName varchar(100) [not null, note: 'Tên trường đã thay đổi']
  OldValue text
  NewValue text
  Reason text
}

Table MaintenanceRequests {
  RequestID int [pk, increment]
  RoomID int
  PropertyID int [not null]
  RequesterUserID int [not null]
  AssignedToUserID int
  RequestDate datetime [default: `now()`]
  Title varchar(255) [not null]
  Description text [not null]
  Priority MaintenancePriority [default: 'MEDIUM']
  Status MaintenanceStatus [not null, default: 'PENDING_APPROVAL']
  ImageURL varchar(255)
  ScheduledDate datetime
  CompletionDate datetime
  Cost decimal(10, 2)
  ResolutionNotes text
  CreatedAt datetime [default: `now()`]
  UpdatedAt datetime
}

Table Notifications {
  NotificationID int [pk, increment]
  RecipientUserID int [not null]
  SenderUserID int
  Title varchar(255) [not null]
  Message text [not null]
  Type NotificationType [not null]
  RelatedEntity varchar(50)
  RelatedEntityID int
  IsRead boolean [default: false]
  ReadAt datetime
  CreatedAt datetime [default: `now()`]
}


//----------------------------------------------------------------
// Định nghĩa các mối quan hệ (Relationships)
//----------------------------------------------------------------

// Users & Properties
Ref: Properties.OwnerUserID > Users.UserID

// Properties & Images
Ref: PropertyImages.PropertyID > Properties.PropertyID

// Properties & Services
Ref: PropertyServices.PropertyID > Properties.PropertyID
Ref: PropertyServices.ServiceID > Services.ServiceID

// PropertyServices & TieredPricing
Ref: TieredPricing.PropertyServiceID > PropertyServices.PropertyServiceID

// Properties & Rooms
Ref: Rooms.PropertyID > Properties.PropertyID

// Rooms & Images
Ref: RoomImages.RoomID > Rooms.RoomID

// Rooms & Services
Ref: RoomServices.RoomID > Rooms.RoomID
Ref: RoomServices.ServiceID > Services.ServiceID

// Rooms & Leases
Ref: Leases.RoomID > Rooms.RoomID
Ref: Leases.PrimaryTenantUserID > Users.UserID
Ref: Leases.LandlordUserID > Users.UserID

// Leases & LeaseTenants
Ref: LeaseTenants.LeaseID > Leases.LeaseID
Ref: LeaseTenants.TenantUserID > Users.UserID

// UtilityReadings
Ref: UtilityReadings.RoomID > Rooms.RoomID
Ref: UtilityReadings.ServiceID > Services.ServiceID
Ref: UtilityReadings.RecordedByUserID > Users.UserID
Ref: UtilityReadings.InvoiceID > Invoices.InvoiceID
Ref: UtilityReadings.PreviousReadingID - UtilityReadings.ReadingID

// Invoices
Ref: Invoices.LeaseID > Leases.LeaseID
Ref: Invoices.RoomID > Rooms.RoomID
Ref: Invoices.GeneratedByUserID > Users.UserID

// InvoiceItems
Ref: InvoiceItems.InvoiceID > Invoices.InvoiceID
Ref: InvoiceItems.ServiceID > Services.ServiceID
Ref: InvoiceItems.ReadingID > UtilityReadings.ReadingID

// Payments
Ref: Payments.InvoiceID > Invoices.InvoiceID
Ref: Payments.LeaseID > Leases.LeaseID
Ref: Payments.PayerUserID > Users.UserID
Ref: Payments.ReceivedByUserID > Users.UserID

// Histories
Ref: TenantMoveHistory.LeaseTenantID > LeaseTenants.LeaseTenantID
Ref: TenantMoveHistory.RoomID > Rooms.RoomID
Ref: TenantMoveHistory.TenantUserID > Users.UserID
Ref: TenantMoveHistory.RecordedByUserID > Users.UserID

Ref: ServiceChangeHistory.RoomServiceID > RoomServices.RoomServiceID
Ref: ServiceChangeHistory.PropertyServiceID > PropertyServices.PropertyServiceID
Ref: ServiceChangeHistory.TieredPriceID > TieredPricing.TieredPriceID
Ref: ServiceChangeHistory.ChangedByUserID > Users.UserID

// Maintenance
Ref: MaintenanceRequests.PropertyID > Properties.PropertyID
Ref: MaintenanceRequests.RoomID > Rooms.RoomID
Ref: MaintenanceRequests.RequesterUserID > Users.UserID
Ref: MaintenanceRequests.AssignedToUserID > Users.UserID

// Notifications
Ref: Notifications.RecipientUserID > Users.UserID
Ref: Notifications.SenderUserID > Users.UserID
